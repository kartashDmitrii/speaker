(function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId]){return installedModules[moduleId].exports}var module=installedModules[moduleId]={i:moduleId,l:false,exports:{}};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.l=true;return module.exports}__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.d=function(exports,name,getter){if(!__webpack_require__.o(exports,name)){Object.defineProperty(exports,name,{enumerable:true,get:getter})}};__webpack_require__.r=function(exports){if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(exports,"__esModule",{value:true})};__webpack_require__.t=function(value,mode){if(mode&1)value=__webpack_require__(value);if(mode&8)return value;if(mode&4&&typeof value==="object"&&value&&value.__esModule)return value;var ns=Object.create(null);__webpack_require__.r(ns);Object.defineProperty(ns,"default",{enumerable:true,value:value});if(mode&2&&typeof value!="string")for(var key in value)__webpack_require__.d(ns,key,function(key){return value[key]}.bind(null,key));return ns};__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module["default"]}:function getModuleExports(){return module};__webpack_require__.d(getter,"a",getter);return getter};__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)};__webpack_require__.p="";return __webpack_require__(__webpack_require__.s=3)})([function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,"default",function(){return popupFunc});class popupFunc{constructor(button,popup,wrapper=true){this.button=button;this.popup=popup;this.wrapper=wrapper;this.openPopupFunc=this.openPopup.bind(this);this.closePopupFunc=this.closePopup.bind(this);if(Array.isArray(this.button)){this.button.forEach(elem=>{elem.addEventListener("click",this.openPopupFunc)})}else{this.button.addEventListener("click",this.openPopupFunc)}if(Array.isArray(this.popup)){this.popup.forEach(elem=>{elem.querySelectorAll(".close").forEach(elem=>elem.addEventListener("click",this.closePopupFunc))})}else{this.popup.querySelectorAll(".close").forEach(elem=>elem.addEventListener("click",this.closePopupFunc))}}openPopup(event){document.querySelectorAll(".popup-wrapper>div").forEach(elem=>{elem.classList.remove("active")});document.querySelectorAll(".popup").forEach(elem=>{elem.classList.remove("active")});if(event.target.dataset.stopEvent===undefined){event.preventDefault();if(Array.isArray(this.popup)){this.popup.forEach(elem=>{elem.classList.add("active");if(elem.parentNode.classList.contains("wrapper")&&this.wrapper){elem.parentNode.classList.add("active")}if(window.screen.width<768){document.body.classList.add("hidden")}});if(document.querySelector(".popup-wrapper")&&this.wrapper){document.querySelector(".popup-wrapper").classList.add("active")}}else{this.popup.classList.add("active");if(this.popup.parentNode.classList.contains("wrapper")&&this.wrapper){this.popup.parentNode.classList.add("active")}if(window.screen.width<768){document.body.classList.add("hidden")}if(document.querySelector(".popup-wrapper")&&this.wrapper){document.querySelector(".popup-wrapper").classList.add("active")}}window.addEventListener("mousedown",this.closePopupFunc)}}closePopup(event){if(!event.target.classList.contains("close")){event.stopPropagation()}else{if(Array.isArray(this.popup)){this.popup.forEach(elem=>{elem.classList.remove("active");if(elem.parentNode.classList.contains("wrapper")&&this.wrapper){elem.parentNode.classList.remove("active")}if(window.screen.width<768){document.body.classList.remove("hidden")}if(document.querySelector(".popup-wrapper")&&this.wrapper){document.querySelector(".popup-wrapper").classList.remove("active")}})}else{this.popup.classList.remove("active");if(this.popup.parentNode.classList.contains("wrapper")&&this.wrapper){this.popup.parentNode.classList.remove("active")}if(window.screen.width<768){document.body.classList.remove("hidden")}if(document.querySelector(".popup-wrapper")&&this.wrapper){document.querySelector(".popup-wrapper").classList.remove("active")}}window.removeEventListener("mousedown",this.closePopupFunc)}}}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,"default",function(){return NumberTimer});class NumberTimer{constructor(object){this.elem=object.elem;this.delay=typeof object.delay==="undefined"?1e3:object.delay;this.max=typeof object.max==="undefined"?parseInt(this.elem.innerText):object.max;this.min=typeof object.min==="undefined"?0:object.max;this.type=typeof object.type==="undefined"?"default":object.type;switch(this.type){case"ease-out":this.bezier=[0,0,.58,1];break;case"default":this.bezier=[0];break}this.iteration=0;this.step=Math.round(this.delay/(this.max-this.min));let currBezier=Math.floor(this.iteration/((this.max-this.min)/this.bezier.length));let interval=setInterval(()=>{this.step=Math.round(this.delay/(this.max-this.min));currBezier=Math.floor(this.iteration/((this.max-this.min)/this.bezier.length));if(this.iteration<this.max-1){this.iteration++;this.elem.innerText=this.iteration}else{this.iteration++;this.elem.innerText=this.iteration;clearInterval(interval)}},this.step*(this.bezier[currBezier]+1))}}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,"default",function(){return hideList});class hideList{constructor(listBlock,fixHeight=null){this.fixHeight=fixHeight;this.listBlock=listBlock;this.list=this.listBlock.querySelector("[data-block]");this.listBlock.querySelector("[data-btn]").addEventListener("click",e=>{this.showBlock(e)});if(this.listBlock.querySelector("[data-btn]").classList.contains("active")){this.fixHeight===null?this.list.style.height=`${this.list.scrollHeight}px`:this.list.style.height=`${this.fixHeight}px`;this.list.classList.add("active")}if(this.list.querySelector(".close")){this.list.querySelector(".close").addEventListener("click",e=>{this.showBlock(e)})}}showBlock(e){e.preventDefault();let blockHeight=parseInt(window.getComputedStyle(this.list).getPropertyValue("height"));if(blockHeight===0){this.fixHeight===null?this.list.style.height=`${this.list.scrollHeight}px`:this.list.style.height=`${this.fixHeight}px`;this.listBlock.querySelector("[data-btn]").classList.add("active");this.list.classList.add("active")}else{this.listBlock.querySelector("[data-btn]").classList.remove("active");this.list.classList.remove("active");this.list.style.height=`0`}}}},function(module,exports,__webpack_require__){__webpack_require__(4);__webpack_require__(5);__webpack_require__(2);__webpack_require__(1);module.exports=__webpack_require__(0)},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _components_hideList__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(2);var _components_popupFunc__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0);if(document.querySelector("header .burger")&&window.screen.width<=900){document.querySelector("header .burger").addEventListener("click",()=>{document.querySelector("header .mobile-menu").classList.toggle("active")})}if(document.querySelector('[data-popup*="-popup"]')){document.querySelectorAll('[data-popup*="-popup"]').forEach(elem=>{new _components_popupFunc__WEBPACK_IMPORTED_MODULE_1__["default"](elem,document.querySelector(`.popup.${elem.dataset.popup}`))})}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _components_NumberTimer__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1);if(document.querySelector("section.top-block")){let stars=document.querySelector("section.top-block .google .stars");let rating=parseFloat(stars.dataset.rating);stars.style.backgroundImage=window.getComputedStyle(stars).getPropertyValue("background-image")+`, linear-gradient(90deg, #36A38F ${rating/5*100}%, #fff ${rating/5*100}%)`}if(document.querySelector("section.why-we .right-side")){function scrollEvent(e){if(pageYOffset>document.querySelector("section.why-we").offsetTop-window.screen.height){document.querySelectorAll("section.why-we .right-side .elem").forEach(elem=>{new _components_NumberTimer__WEBPACK_IMPORTED_MODULE_0__["default"]({elem:elem.querySelector(".num span"),delay:4e3,type:"ease-out"})});window.removeEventListener("scroll",scrollEvent)}}window.addEventListener("scroll",scrollEvent)}if(document.querySelector("section.our-team")){let swiper=new Swiper("section.our-team .swiper-container",{navigation:{nextEl:"section.our-team .swiper-container .arrow.next",prevEl:"section.our-team .swiper-container .arrow.prev"}})}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
